diff --git a/node_modules/vite/dist/node/chunks/dep-CMEinpL-.js b/node_modules/vite/dist/node/chunks/dep-CMEinpL-.js
index 6cfccb3..a99e34a 100644
--- a/node_modules/vite/dist/node/chunks/dep-CMEinpL-.js
+++ b/node_modules/vite/dist/node/chunks/dep-CMEinpL-.js
@@ -35,6 +35,7 @@ import { createServer as createServer$1, get as get$1 } from "node:https";
 import { ESModulesEvaluator, ModuleRunner, createNodeImportMeta } from "vite/module-runner";
 import zlib from "zlib";
 import * as qs from "node:querystring";
+import { createHash } from "node:crypto";
 
 //#region ../../node_modules/.pnpm/picocolors@1.1.1/node_modules/picocolors/picocolors.js
 var require_picocolors = /* @__PURE__ */ __commonJS({ "../../node_modules/.pnpm/picocolors@1.1.1/node_modules/picocolors/picocolors.js": ((exports, module) => {
@@ -2694,9 +2695,12 @@ const requestQuerySplitRE = /\?(?!.*[/|}])/;
 const requestQueryMaybeEscapedSplitRE = /\\?\?(?!.*[/|}])/;
 const blankReplacer = (match) => " ".repeat(match.length);
 function getHash(text, length = 8) {
-	const h$2 = crypto.hash("sha256", text, "hex").substring(0, length);
-	if (length <= 64) return h$2;
-	return h$2.padEnd(length, "_");
+	const h$2 = createHash("sha256")
+    .update(text)
+    .digest("hex")
+    .substring(0, length);
+  if (length <= 64) return h$2;
+  return h$2.padEnd(length, "_");
 }
 const requireResolveFromRootWithFallback = (root, id) => {
 	const found$1 = resolvePackageData(id, root) || resolvePackageData(id, _dirname);
